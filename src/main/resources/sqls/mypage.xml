<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.pickme.beeze.mypage.dao.MypageDao">
 
<!-- 마이페이지 메인화면 정보 확인 [장바구니 수량, 포인트, 쿠폰, 찜 목록, 선물함] -->
<!-- 장바구니 물품을 구매하거나 쿠폰을 사용하고나면 집계되지 않도록 해야한다. -->
<select id="getMyInfo" parameterType="MyInfoDto" resultType="MyInfoDto">
	SELECT cu.name, cu.grade, cu.point, count(DISTINCT s.id) as `saveQuantity`, count(DISTINCT co.id) as `couponQuantity`, count(DISTINCT ca.id) as `cartQuantity`, count(DISTINCT g.id) as `giftQuantity`
	  FROM customer_info cu
	  LEFT JOIN cart ca ON cu.id = ca.customer_id 
	  LEFT JOIN coupon co ON cu.id = co.user_id
	  LEFT JOIN save s ON cu.id = s.customer_id
	  LEFT JOIN gift g ON cu.id = g.customer_id
	 WHERE cu.id = #{id};
</select>
<select id="getMyInfoCart" parameterType="MyInfoDto" resultType="Integer">
	SELECT count(id) as `cartQuantity`
	  FROM cart
	 WHERE customer_id = #{id} and order_yn = 0;
</select>
<select id="getMyInfoGift" parameterType="MyInfoDto" resultType="Integer">
	SELECT count(id) as `giftQuantity`
	  FROM gift
	 WHERE send_customer_id = #{id} and use_yn = 0;
</select>

<!-- 최근본상품 불러오기 -->
<select id="getRecentlyProduct" parameterType="Integer" resultType="MypageProductDto">
	SELECT id, name, price, url, product_rating
	  FROM product
	 WHERE id = #{id}
</select>

	<!-- 찜 -->
<!-- 찜목록 가져오기 -->
<select id="getSave" parameterType="Integer" resultType="MypageSaveDto">
	select p.id, p.name, p.price, p.url, p.product_rating 
	  from save s
	 INNER JOIN product p ON s.product_id = p.id
	 WHERE s.customer_id = #{id}
</select>

	<!-- 리뷰 -->
<!-- 리뷰추가 -->
<insert id="addReview" parameterType="MypageReviewDto">
insert into review(product_id, customer_id, content, rating)
values(#{productId}, #{customerId}, #{content}, #{rating})
</insert>

<!-- 리뷰보기 -->
<select id="getMyReview" parameterType="Integer" resultType="MypageReviewDto">
	SELECT p.url, p.name, content, rating, product_rating
	  FROM review r
	 INNER JOIN product p ON r.product_id = p.id 
	 where customer_id = #{id}
</select>

<!-- 리뷰삭제 -->
<delete id="delReview" parameterType="MypageReviewDto">
	delete from review
	 where customer_id = #{customerId} and product_id = #{productId}
</delete>

	<!-- 개인정보 관리  -->
<!-- 개인정보 보기-->
<select id="getUserInfo" parameterType="Integer" resultType="com.pickme.beeze.mypage.dto.MypageCustomerDto">
	select pw, email, name, address, phone, point, grade, LEFT(rdate, 10) as `rdate`
	  from customer_info
	 where id = #{id}
	 <!-- id = customer_id -->
</select>

<!-- 개인정보 수정 -->
<update id="updateUserInfo" parameterType="com.pickme.beeze.mypage.dto.MypageCustomerDto">
	update customer_info
	   set address = #{address}, phone = #{phone}
	 where id = #{id}
</update>

	<!-- 포인트 및 쿠폰 -->
<!-- 내 포인트 적립/차감하기 -->
<update id="updatePoint" parameterType="com.pickme.beeze.mypage.dto.MypageCustomerDto">
	update customer_info
	   set point = #{point}
	 where id = #{id}
</update>

<!-- 내 쿠폰 보기 -->
<select id="getCoupon" parameterType="Integer" resultType="com.pickme.beeze.mypage.dto.MypageCouponDto">
	select id,title, content, start_date as `startDate`, end_date as `endDate`
	  from coupon
	 where user_id = #{id}
</select>

<!-- 쿠폰 사용시 -->
<delete id="deleteCoupon" parameterType="Integer">
	DELETE FROM coupon
	 WHERE id=#{id}
</delete>


	<!-- 1:1문의게시판 보기 -->
<!-- 1:1 문의 게시글 작성하기   -->
<!-- answer_yn 0: 답변완료 전, 1:답변완료 후 -->
<insert id="addCcbList" parameterType="com.pickme.beeze.manager.dto.CcbDto">
	insert into ccb(category, customer_id, title, content, create_at, answer_yn)
	values (#{category}, #{customerId}, #{title}, #{content}, now(), 0)
</insert>

<!-- 내 1:1 문의 게시판 불러오기 -->
<select id="getMyCcbList" parameterType="com.pickme.beeze.manager.dto.CcbDto" resultType="com.pickme.beeze.manager.dto.CcbDto">
	SELECT id, category, title, content, create_at as `createAt`, answer_yn as `answerYn`
	  FROM ccb
	 WHERE customer_id = #{custoemerId}
</select>

	<!-- Pick Box -->
<!-- 픽박스 불러오기 -->
<select id="MyPickBox" parameterType="Integer" resultType="MyPickBoxDto">
	SELECT  p.name as `pName`, c.quantity as `quantity`, p.url as `pUrl`, s.exp_date as `expDate`, st.name as `sName`, date
	  FROM pickme.order o
	 INNER JOIN cart c ON o.cart_id = c.id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN product p ON s.product_id = p.id
	 WHERE cancel_yn = 0 and c.customer_id = #{id}
</select>


	<!-- 내 주문내역 -->
<!-- 현재 기획 -->
<select id="MyOrdersLists" parameterType="Integer" resultType="MypageOrderdayDto">
	SELECT date, p.name as `pName`, c.quantity as `quantity`, p.price as `price`, st.address as `sAddress`, ce.name as `ceoName`
	  FROM pickme.order o
	 INNER JOIN cart c ON o.cart_id = c.id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN ceo_info ce ON st.ceo_id = ce.id
	 INNER JOIN product p ON s.product_id = p.id
	 WHERE cancel_yn = 0 and c.customer_id = #{id}
</select>

<!-- 첫기획  -->
<!-- 내 주문내역 불러오기 날짜 및 해당 주문에 대한 수량 날짜 / 상품종류 숫자-->
<select id="MyOrdersList" parameterType="Integer" resultType="MypageOrderdayDto">
	SELECT date, COUNT(cart_id) as `pQuantity` 
	  FROM pickme.order o
	 INNER JOIN cart c ON o.cart_id = c.id 
	 WHERE cancel_yn = 0 and c.customer_id = #{id}
	 GROUP BY date
</select>
<!-- date로 상품번호 받아와서 그걸로 상품 이름출력 -->
<select id="MyOrdersListName" parameterType="String" resultType="MypageOrderdayDto">
	SELECT p.name as `pName`, c.quantity as `quantity`, p.price as `price`
	  FROM pickme.order o
	 INNER JOIN cart c ON o.cart_id = c.id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN product p ON s.product_id = p.id
	 WHERE date = #{date}
</select>

<!-- 원하는 날짜에 대한 주문 리스트 출력 -->
<select id="MyOrdersCartList" parameterType="MypageOrderdayDto" resultType="MypageOrderDto">
	SELECT cart_id
	  FROM order
	 WHERE date = #{date} and cancel_yn = 0
</select>
<!-- id 주문번호 / cartId 카트번호 / date 날짜 / cancelYn 결제취소 / sProductId 제품번호 / quantity 수량 -->
<select id="getMyOrderList" parameterType="MypageOrderDto" resultType="MypageOrderDto">
	SELECT id, e.cart_id as `cartId`, date, cancel_yn as `cancelYn`, s_product_id as `sProductId`, quantity
	  FROM order o 
	 INNER JOIN cart c ON o.cart_id = c.id
	 WHERE c.customer_id = #{customerId} and order_yn = 1
</select>

<!-- sProductID 를 통해 상품정보 까지 불러오기 -->
<!-- storeId 점포번호 / expDate 제품소비기한 / name 상품명 / price 가격 -->
<select id="getMYOrderProduct" parameterType="MypageOrderDto" resultType="MypageOrderDto">
	SELECT s.store_id as `storeId` s.exp_date as `expDate` name, price
	  FROM store_product s INNER JOIN product p
	    ON s.product_id = p.id
	 WHERE id = #{sProductId}
</select>

<!-- storeId 를 통해서 점포이름 및 위치 가져오기 -->
<!-- storeName 점포이름 / lat 위도 / lon 경도 / tel 전화번호 -->
<select id="getMyOrderStore" parameterType="MypageOrderDto" resultType="MypageOrderDto">
	SELECT name as `storeName`, lat, lon, tel
	  FROM store
	 WHERE id = #{storeId}
</select>

<!-- 내 주문 취소 -->
<update id="cancelMyOrder" parameterType="MypageOrderDto">
	UPDATE order 
	   SET cancel_yn = 1
	 WHERE customer_id = #{customerId}
</update>

</mapper>