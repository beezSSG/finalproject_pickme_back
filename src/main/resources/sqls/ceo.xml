<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pickme.beeze.ceo.dao.CeoDao">
	<!-- 점주 메인화면 정보 확인[점주 이름, 점포 이름]-->
	<select id="getCeoInfo" parameterType="com.pickme.beeze.ceo.dto.CeoInfoDto" resultType="com.pickme.beeze.ceo.dto.CeoInfoDto">
		select ci.name as `ceoname`, st.name as `storename`, st.id as `id`
		  from pickme.ceo_info ci join
		pickme.store st on ci.id = st.ceo_id 
		where ci.id=#{id}
	</select>

<!-- 글의 목록 --> 
<select id="polist" parameterType="com.pickme.beeze.ceo.dto.CeoParam" resultType="com.pickme.beeze.ceo.dto.PurchaseDto"> 
	SELECT po.id, p.id as `productId`, s.id as `storeId`, p.url, p.name, po.quantity, po.po_yn as `poYn`, substr(po.wdate, 1,10) as `wdate`
	  FROM purchase_order po
	 INNER JOIN ceo_info ci ON po.ceo_id = ci.id
	 INNER JOIN store s ON po.ceo_id = s.ceo_id
	 INNER JOIN product p ON po.product_id = p.id
	 WHERE NOT po.po_yn = 2 and ci.id = #{id}
	 <if test="search != null and search != ''">
		and p.name like concat('%', #{search}, '%')
	</if>
	 ORDER BY po.wdate desc
	 LIMIT ${(pageNumber * 10)}, 10
</select>

<!-- 글의 총수 -->
<select id="getallceo" parameterType="com.pickme.beeze.ceo.dto.CeoParam" resultType="java.lang.Integer"> 
	select count(*)
	from pickme.purchase_order o join
	pickme.product p on p.id = o.product_id 
	where o.ceo_id=#{id} and not o.po_yn = 2
	<if	test="search != null and search != ''">
		and name like concat('%', #{search}, '%')
	</if>


</select>

	<!-- 발주하기(신청가능품목) -->

	<select id="powrite" parameterType="com.pickme.beeze.ceo.dto.CeoParam"
		resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
		select p.id, p.name, p.price 
		from pickme.product p join pickme.product_category pc on pc.product_id = p.id 
		<if	test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where name like concat('%', #{search}, '%') and del=0
			</if>
		</if>
	</select>

	<!--발주하기(카테고리 목록)-->

<!--	<select id="powriteCn" parameterType="Integer"
		resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
            select p.id, pc.category_id as `categoryId`, c.name as `categoryName`, p.name, p.price
            from product p, category c, product_category pc
            where p.id = pc.product_id
		
		<if test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where name like concat('%', #{search}, '%') and del=0
			</if>
		</if>
	</select>-->
	
	<select id="powriteCn" parameterType="com.pickme.beeze.ceo.dto.ProductDto" resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
			select p.id as `id`, pc.category_id as `categoryId`, c.name as `categoryName`, p.name, p.price
            from product p, category c, product_category pc
            where pc.category_id = c.id and pc.product_id = p.id
	</select>
	<!-- 발주발주 진짜 됨 -->
	<insert id="powritefinal" parameterType="com.pickme.beeze.ceo.dto.PurchaseProductDto">
	    insert into purchase_order(ceo_id, product_id, quantity, po_yn, wdate)
	    values (#{id}, (select id from product where name=#{name}), #{quantity}, 0, now())
	</insert>

	
	<!--  화면에서 승인이 완료된 물품을 사라지게 하기 -->
	<!-- 여기가 점주 화면에서 사라지게 하는역할 -->
	<update id="deleteProduct" parameterType="com.pickme.beeze.ceo.dto.PurchaseDto">
		update pickme.purchase_order
		   set po_yn = 2, quantity = #{quantity}
		 where id=#{id}
	</update>
	<!-- 점주가 확인한 수량 물품 소비기한 을 토대로 store_product에 넣어주는 작업  -->
	<insert id="addProduct" parameterType="com.pickme.beeze.ceo.dto.InventoryDto">
		INSERT INTO store_product(store_id, product_id, quantity, exp_date)
		VALUES (#{storeId}, #{productId}, #{quantity}, #{expDate})
	</insert>
	
	<!-- 재고현황 id 상품번호 /storeName 점포이름 / productName 상품이름 / price 가격 / quantity 수량 / exp_date --> 
	<select id="inventory" parameterType="com.pickme.beeze.ceo.dto.InventoryDto" resultType="com.pickme.beeze.ceo.dto.InventoryDto">
	SELECT sp.id, s.name as `storeName`, p.name as `productName`, p.price as `price`, quantity, date_format(exp_date, '%Y-%m-%d')  as `expDate`
	  FROM pickme.store_product sp 
	  INNER JOIN pickme.store s ON sp.store_id = s.id
	  INNER JOIN pickme.product p ON sp.product_id = p.id
	  WHERE s.ceo_id =#{id} 
	  <if test="search != null and search != '' ">	
			and p.name like concat('%', #{search}, '%') 
	  </if>  
 	  limit ${(pageNumber * 10)}, 10	  
	</select>
	
	<select id="getallinven" parameterType="com.pickme.beeze.ceo.dto.InventoryDto" resultType="Integer">
	    select count(*)	
	    from store_product sp
	    inner join product p on sp.product_id = p.id
	    where sp.store_id = (select id from store where ceo_id=#{id}) 
	    <if test="search != null and search != '' ">	
	        and p.name like concat('%', #{search}, '%') 
	    </if> 
	</select>

	
	<!-- 픽업목록 -->
	<!-- SELECT distinct o.id, p.name as `productName`, p.price as `price`, ci.name as `customerName`, date_format(date, '%Y-%m-%d') as `date`, pick_del as `pickDel`, ci.id as `customerId` -->
	<select id="pickup" parameterType="com.pickme.beeze.ceo.dto.OrderDto" resultType="com.pickme.beeze.ceo.dto.OrderDto">
     	SELECT distinct o.id, p.name as `productName`, p.price as `price`, ci.name as `customerName`, date, pick_del as `pickDel`, ci.id as `customerId`
	  FROM pickme.order o
      INNER JOIN cart c ON o.cart_id = c.id
      INNER JOIN customer_info ci ON c.customer_id = ci.id
      INNER JOIN store_product sp ON sp.product_id = c.s_product_id
	  INNER JOIN product p ON sp.product_id = p.id
      INNER JOIN store st ON sp.store_id = st.id
      WHERE st.ceo_id = #{id} and o.check_yn = 0
      	  <if test="search != null and search != '' ">	
			and p.name like concat('%', #{search}, '%') 
	  </if>  
 	  limit ${(pageNumber * 10)}, 10	 
	</select>
	
	<select id="getallpickup" parameterType="com.pickme.beeze.ceo.dto.OrderDto" resultType="Integer">
	    select count(*)	
	    from pickme.order o
      INNER JOIN cart c ON o.cart_id = c.id
      INNER JOIN customer_info ci ON c.customer_id = ci.id
      INNER JOIN store_product sp ON sp.product_id = c.s_product_id
	  INNER JOIN product p ON sp.product_id = p.id
      INNER JOIN store st ON sp.store_id = st.id
	    where sp.store_id = (select id from store where ceo_id=#{id}) 
	    <if test="search != null and search != '' ">	
	        and p.name like concat('%', #{search}, '%') 
	    </if> 
	</select>
	
	<!-- 픽업/배달 리스트에서 사라지게 하기  -->
	<update id="deletepickup" parameterType="com.pickme.beeze.ceo.dto.OrderDto">
		update pickme.order
		   set check_yn = 1
		 where date = #{date}
	</update>
		
	<!-- 택배 목록 -->
	<select id="postcheck" parameterType="com.pickme.beeze.ceo.dto.PostDto" resultType="com.pickme.beeze.ceo.dto.PostDto">
     SELECT DISTINCT ci.name as `customerName`, po.item_category as `itemCategory`, po.item_weight as `itemWeight`, po.total_price as `totalPrice`,  date_format(po.date, '%Y-%m-%d')  as `date`, po.post_yn as `postYn`,po.id,po.check_yn as `checkYn`
	  FROM pickme.post po
	 INNER JOIN customer_info ci ON po.customer_id = ci.id
	 INNER JOIN cart c ON po.customer_id = c.customer_id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN product p ON s.product_id = p.id
     WHERE st.ceo_id = #{id}
 	  limit ${(pageNumber * 10)}, 10	 
	</select>	
	
	<!-- 택배 페이지네이션 -->
	<select id="getallpost" parameterType="com.pickme.beeze.ceo.dto.PostDto" resultType="Integer">
	    select count(*)	
	  FROM pickme.post po
	 INNER JOIN customer_info ci ON po.customer_id = ci.id
	 INNER JOIN cart c ON po.customer_id = c.customer_id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN product p ON s.product_id = p.id
	    where s.store_id = (select id from store where ceo_id=#{id}) 
	</select>
	
	<!-- 택배 리스트에서 사라지게 하기  -->
	<update id="deletepost" parameterType="com.pickme.beeze.ceo.dto.PostDto">
		update pickme.post
		   set check_yn = 1
		 where id = #{id}
	</update>
	
	<!-- 월별 매출 차트를 위한 전체 order 목록  -->
	<select id="saleschart" parameterType="com.pickme.beeze.ceo.dto.OrderDto" 
		resultType="com.pickme.beeze.ceo.dto.SalesChartDto">
		SELECT 
		    YEAR(orderDate) AS orderYear,
		    MONTH(orderDate) AS orderMonth,
		    SUM(totalPrice) AS totalMonthlySales
		FROM (
		    SELECT 
		        o.id AS orderId,
		        o.cart_id AS cartId,
		        c.customer_id AS customerId,
		        p.name AS productName,
		        o.date AS orderDate,
		        p.price AS unitPrice,
		        c.quantity AS orderQuantity,
		        (p.price * c.quantity) AS totalPrice,
		        s.name AS storeName
		    FROM 
		        `order` o
		    INNER JOIN 
		        cart c ON o.cart_id = c.id
		    INNER JOIN
		        store_product sp ON c.s_product_id = sp.id
		    INNER JOIN
		        product p ON sp.product_id = p.id
		    INNER JOIN 
		        store s ON sp.store_id = s.id
		    WHERE 
		        o.cancel_yn = 0 
		        AND c.order_yn = 1
		        AND s.id = #{id}
		        AND YEAR(o.date) = #{date}
		) AS subquery
		GROUP BY 
		    orderYear, orderMonth;		    
	</select>
	
	<!-- 상품 예약 목록 불러오기 -->
	<select id="getrplist" parameterType="com.pickme.beeze.customer.dto.ProductReservationDto" resultType="com.pickme.beeze.customer.dto.ProductReservationDto">
		SELECT p.name AS `productName`,
		       ci.name AS `customerName`,
		       s.name AS `storeName`,
		       pr.quantity as `quantity`,
		       pr.pick_yn as `pickYn`,
		       pr.id as `id`
		FROM product_reservation pr
		JOIN product p ON pr.product_id = p.id
		JOIN store s ON pr.store_id = s.id
		JOIN customer_info ci ON pr.customer_id = ci.id
		WHERE s.ceo_id = #{ceoId} and pr.pick_yn = 0
		limit ${(pageNumber * 5)}, 5
	</select>
	
	<!-- 상품 예약 목록 총 수 -->
	<select id="getallrp" parameterType="com.pickme.beeze.customer.dto.ProductReservationDto" resultType="Integer">
		  select count(*)
		  from product_reservation
		  where store_id in (
		      select id
		      from store
		      where ceo_id = #{ceoId}
		  )
	</select>
	
	<!-- 예약 승인 -->
	<update id="checkrp" parameterType="Integer">
		update product_reservation
		set pick_yn = 1
		where id=#{id}
	</update>


</mapper>