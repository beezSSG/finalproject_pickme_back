<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pickme.beeze.ceo.dao.CeoDao">
	<!-- 점주 메인화면 정보 확인[점주 이름, 점포 이름]-->
	<select id="getCeoInfo" parameterType="com.pickme.beeze.ceo.dto.CeoInfoDto" resultType="com.pickme.beeze.ceo.dto.CeoInfoDto">
		select ci.name as `ceoname`, st.name as `storename`
		  from pickme.ceo_info ci join
		pickme.store st on ci.id = st.ceo_id 
		where ci.id=#{id}
	</select>

	<!-- 글의 목록 -->
	<select id="polist" parameterType="com.pickme.beeze.ceo.dto.CeoParam"
		resultType="com.pickme.beeze.ceo.dto.PurchaseDto"> 
		select o.id, p.url, p.name, o.quantity, o.po_yn as `poYn`, substr(o.wdate, 1,10) as `wdate`
		from pickme.purchase_order o join
		pickme.product p on p.id = o.product_id
		<if	test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where p.name like concat('%', #{search}, '%')
			</if>
	      	<if test="choice == 'wdate'">
         		where o.wdate like concat('%', #{search}, '%')
      		</if>
		</if>
		order by wdate 
		limit ${(pageNumber * 10)}, 10<!-- 페이지 당 글 개수  -->
	</select>

	<!-- 글의 총수 -->

	<select id="getallceo" parameterType="com.pickme.beeze.ceo.dto.CeoParam"
		resultType="java.lang.Integer"> 
		select count(*)
		from pickme.purchase_order o join
		pickme.product p on p.id = o.product_id 
		<if	test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where name like concat('%', #{search}, '%')
			</if>
	      	<if test="choice == 'wdate'">
         		where wdate like concat('%', #{search}, '%') 
      		</if>
		</if>
	</select>

	<!-- 발주하기(신청가능품목) -->

	<select id="powrite" parameterType="com.pickme.beeze.ceo.dto.CeoParam"
		resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
		select p.id, p.name, p.price 
		from pickme.product p join pickme.product_category pc on pc.product_id = p.id 
		<if	test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where name like concat('%', #{search}, '%') and del=0
			</if>
		</if>
	</select>

	<!--발주하기(카테고리 목록)-->

<!--	<select id="powriteCn" parameterType="Integer"
		resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
            select p.id, pc.category_id as `categoryId`, c.name as `categoryName`, p.name, p.price
            from product p, category c, product_category pc
            where p.id = pc.product_id
		
		<if test="choice != null and choice != '' and search != null and search != ''">
			<if test="choice == 'name'">
				where name like concat('%', #{search}, '%') and del=0
			</if>
		</if>
	</select>-->
	
	<select id="powriteCn" parameterType="com.pickme.beeze.ceo.dto.ProductDto" resultType="com.pickme.beeze.ceo.dto.ProductDto"> 
			select p.id as `id`, pc.category_id as `categoryId`, c.name as `categoryName`, p.name, p.price
            from product p, category c, product_category pc
            where pc.category_id = c.id and pc.product_id = p.id
	</select>
	
	<!--  화면에서 승인이 완료된 물품을 사라지게 하기 -->
	<update id="deleteProduct" parameterType="com.pickme.beeze.ceo.dto.ProductDto">
		update pickme.purchase_order
			set po_yn as `poYn` = 1, quantity = #{quantity}
		where id=#{id}
	</update>
	
	<!-- 재고현황 id 상품번호 /storeName 점포이름 / productName 상품이름 / price 가격 / quantity 수량 / exp_date --> 
	<select id="inventory" parameterType="com.pickme.beeze.ceo.dto.InventoryDto" resultType="com.pickme.beeze.ceo.dto.InventoryDto">
	SELECT sp.id, s.name as `storeName`, p.name as `productName`, p.price as `price`, quantity, date_format(exp_date, '%Y-%m-%d')  as `expDate`
	  FROM pickme.store_product sp 
	 INNER JOIN pickme.store s ON sp.store_id = s.id
	 INNER JOIN pickme.product p ON sp.product_id = p.id
	  WHERE s.ceo_id =#{id} 
 	order by exp_date 
	  
	</select>
	
	<!-- 픽업목록 -->
	<select id="pickup" parameterType="com.pickme.beeze.ceo.dto.OrderDto" resultType="com.pickme.beeze.ceo.dto.OrderDto">
	SELECT p.name as `productName`, p.price as `price`, ci.name as `customerName`, pick_del as `pickDel`
	  FROM pickme.order o
	 INNER JOIN pickme.customer_info ci ON o.cart_id = ci.id
	 INNER JOIN cart c ON o.cart_id = c.id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN product p ON s.product_id = p.id
      WHERE cancel_yn = 0 and st.ceo_id = #{id}
	</select>
	
	
	<!-- 배달 목록 -->
	<select id="postcheck" parameterType="com.pickme.beeze.ceo.dto.PostDto" resultType="com.pickme.beeze.ceo.dto.PostDto">
     SELECT DISTINCT ci.name as `customerName`, po.item_category as `itemCategory`, po.item_weight as `itemWeight`, po.total_price as `totalPrice`,  date_format(po.date, '%Y-%m-%d')  as `date`, po.post_yn as `postYn`
	  FROM pickme.post po
	 INNER JOIN customer_info ci ON po.customer_id = ci.id
	 INNER JOIN cart c ON po.customer_id = c.customer_id
	 INNER JOIN store_product s ON c.s_product_id = s.id
	 INNER JOIN store st ON s.store_id = st.id
	 INNER JOIN product p ON s.product_id = p.id
     WHERE post_yn = 0 and st.ceo_id = #{id}

	</select>	
	
	
	<!-- 월별 매출 차트를 위한 전체 order 목록  -->
	<select id="salechart" parameterType="com.pickme.beeze.ceo.dto.OrderDto" 
		resultType="com.pickme.beeze.ceo.dto.SaleChartDto">
	select 
	    o.id as orderId,
	    o.cart_id as cartId,
	    c.customer_id as customerId,
	    p.name as productName,
	    sp.exp_date as expDate,
	    p.price as unitPrice,
	    c.quantity as orderQuantity,
	    (p.price * c.quantity) as totalPrice,
	    s.name as storeName
	from 
	    `order` o
	inner join 
	    cart c ON o.cart_id = c.id
	inner join
	    store_product sp on c.s_product_id = sp.id
	inner join
	    product p on sp.product_id = p.id
	inner join 
	    store s on sp.store_id = s.id
	where 
	    o.cancel_yn = 0 
	    and c.order_yn = 1
	    and date_format(o.date, '%Y-%m-%d') = #{date}
	    and s.address like concat(#{address}, '%')	 
	    
	    
	</select>
</mapper>