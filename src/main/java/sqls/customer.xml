<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.pickme.beeze.customer.dao.CustomerDao">

	<!-- 장바구니 -->
<!-- 장바구니 담기 -->
<select id="getsProductId" parameterType="map" resultType="Integer">
	select store_product.id
	from store_product
	inner join product on store_product.product_id = product.id
	where product.name = #{productName} and store_product.store_id = #{storeId};
</select>
<insert id="cartInsert" parameterType="CartDto">
	insert into cart(customer_id,s_product_id,quantity,order_yn)
	values(#{customerId},#{sProductId},#{quantity},0)
</insert>

<!-- 장바구니 목록보기 -->
<select id="getMyCart" parameterType="Integer" resultType="CartDto" > 
	<!-- order_yn [0 == 결제완료전 / 1 == 결제완료] -->
	SELECT id, customer_id, s_product_id, quantity
	  FROM cart
	 WHERE order_yn = 0 and customer_id = #{id}
</select>
<!-- 목록에 대한 물품 조회 -->
<select id="getMyCartProduct" parameterType="CartDto" resultType="CartDto">
	SELECT p.name as `productName`, p.price as `productPrice`, p.url as `productUrl`
	  FROM store_product s INNER JOIN  product  p
	    ON s.product_id = p.id
	 WHERE s.id = #{sProductId};
</select>

<!-- 장바구니 목록삭제 -->
<delete id="delCart" parameterType="CartDto">
	delete from cart
	 where customer_id = #{customerId} and s_product_id = #{sProductId}
</delete>

<!-- 장바구니 물품 수량 변경 -->
<update id="changeMyQuantity" parameterType="CartDto">
	UPDATE cart
	   SET quantity = #{quantity}
	 WHERE customer_id = #{customerId} and s_product_id = #{sProductId}
</update>


	<!-- 찜하기 -->
<!-- 찜 목록 확인 (중복여부 체크) -->
<select id="checkZZIM" parameterType="map" resultType="Integer">
	select count(*)
	from save
	where product_id = #{productId} and customer_email = #{customerEmail}
</select>

<!-- 상품 찜 추가 -->
<insert id="insertZZIM" parameterType="map">
	insert into save(product_id, customer_email)
	values ( #{productId}, #{customerEmail})
</insert>

<!-- 상품 찜 추가 -->
<delete id="deleteZZIM" parameterType="map">
	delete from save
	where product_id = #{productId} and customer_email = #{customerEmail}
</delete>



<!-- 주문하기 -->
<insert id="order" parameterType="Integer">
	insert into `order`(cart_id,date)
	values(#{id}, now())
</insert>

</mapper>